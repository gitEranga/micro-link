name: Deploy to Staging

on:
<<<<<<< HEAD
  pull_request:
=======
  workflow_dispatch:
  #pull_request:
>>>>>>> 99d80d84b58e08c277d7f748552d6607cb1de566
    branches:
      - main
    types: [closed]

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    environment: staging
    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Install Amplify CLI
        run: npm install -g @aws-amplify/cli
      
      - name: Deploy to Amplify (Staging)
        run: |
          amplify init --amplify "{\"envName\":\"staging\"}" --yes
          amplify publish --yes
        env:
          AMPLIFY_APP_ID: ${{ secrets.AMPLIFY_APP_ID }}
          AMPLIFY_BRANCH: staging
          
      - name: Notify Datadog of Deployment
        run: |
          curl -X POST "https://api.datadoghq.com/api/v1/events" \
          -H "Content-Type: application/json" \
          -H "DD-API-KEY: ${DD_API_KEY}" \
          -d @- << EOF
          {
            "title": "Deployment to Staging",
            "text": "Successfully deployed to staging environment",
            "tags": ["environment:staging", "service:micro-link", "version:${{ github.sha }}"],
            "alert_type": "info",
            "source_type_name": "github"
          }
          EOF
        env:
<<<<<<< HEAD
          DD_API_KEY: ${{ secrets.DATADOG_API_KEY }}
=======
          DD_API_KEY: ${{ secrets.DATADOG_API_KEY }}
>>>>>>> 99d80d84b58e08c277d7f748552d6607cb1de566
